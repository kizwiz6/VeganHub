// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VeganHub.Infrastructure.Data;

#nullable disable

namespace VeganHub.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241105155138_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeRecipeTag", b =>
                {
                    b.Property<Guid>("RecipeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RecipeId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("RecipeTags", (string)null);
                });

            modelBuilder.Entity("VeganHub.Core.Models.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("CookTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("PrepTime")
                        .HasColumnType("time");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("VeganHub.Core.Models.RecipeTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("RecipeRecipeTag", b =>
                {
                    b.HasOne("VeganHub.Core.Models.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeganHub.Core.Models.RecipeTag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VeganHub.Core.Models.Recipe", b =>
                {
                    b.OwnsOne("VeganHub.Core.Models.NutritionalInfo", "NutritionalInfo", b1 =>
                        {
                            b1.Property<Guid>("RecipeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Calories")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Carbohydrates")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Fat")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Fiber")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("Protein")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("RecipeId");

                            b1.ToTable("Recipes");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");
                        });

                    b.OwnsMany("VeganHub.Core.Models.RecipeIngredient", "Ingredients", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("Quantity")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<Guid>("RecipeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Unit")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("RecipeId");

                            b1.ToTable("RecipeIngredient");

                            b1.WithOwner()
                                .HasForeignKey("RecipeId");

                            b1.OwnsOne("VeganHub.Core.Models.NutritionalInfo", "NutritionalInfo", b2 =>
                                {
                                    b2.Property<Guid>("RecipeIngredientId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<decimal>("Calories")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<decimal>("Carbohydrates")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<decimal>("Fat")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<decimal>("Fiber")
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<decimal>("Protein")
                                        .HasColumnType("decimal(18,2)");

                                    b2.HasKey("RecipeIngredientId");

                                    b2.ToTable("RecipeIngredient");

                                    b2.WithOwner()
                                        .HasForeignKey("RecipeIngredientId");
                                });

                            b1.Navigation("NutritionalInfo")
                                .IsRequired();
                        });

                    b.Navigation("Ingredients");

                    b.Navigation("NutritionalInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
